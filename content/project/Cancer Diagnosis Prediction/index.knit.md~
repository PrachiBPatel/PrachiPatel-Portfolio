---
title: "Cancer Diagnosis Prediction"
author: "Prachi Patel"
date: "2022-12-13"
output: pdf_document
---

This section is for the basic set up.
It will clear all the plots, the console and the workspace.
It also sets the overall format for numbers.


```r
if(!is.null(dev.list())) dev.off()
```

```
## null device 
##           1
```

```r
cat("\014") 
```



```r
rm(list=ls())
options(scipen=9)
```

This section loads and attaches all the necessary packages.


```r
if(!require(readxl)){install.packages("readxl")}
```

```
## Loading required package: readxl
```

```r
library("readxl")

if(!require(pastecs)){install.packages("pastecs")}
```

```
## Loading required package: pastecs
```

```r
library("pastecs")

if(!require(lattice)){install.packages("lattice")}
```

```
## Loading required package: lattice
```

```r
library("lattice")

if(!require(ggplot2)){install.packages("ggplot2")}
```

```
## Loading required package: ggplot2
```

```r
library("ggplot2")

if(!require(tinytex)){install.packages("tinytex")}
```

```
## Loading required package: tinytex
```

```r
library("tinytex")

if(!require(corrgram)){install.packages("corrgram")}
```

```
## Loading required package: corrgram
```

```
## Warning: package 'corrgram' was built under R version 4.2.2
```

```
## 
## Attaching package: 'corrgram'
```

```
## The following object is masked from 'package:lattice':
## 
##     panel.fill
```

```r
library("corrgram")

if(!require(psych)){install.packages("psych")}
```

```
## Loading required package: psych
```

```
## Warning: package 'psych' was built under R version 4.2.2
```

```
## 
## Attaching package: 'psych'
```

```
## The following objects are masked from 'package:ggplot2':
## 
##     %+%, alpha
```

```r
library("psych")

if(!require(partykit)){install.packages("partykit")}
```

```
## Loading required package: partykit
```

```
## Warning: package 'partykit' was built under R version 4.2.2
```

```
## Loading required package: grid
```

```
## Loading required package: libcoin
```

```
## Warning: package 'libcoin' was built under R version 4.2.2
```

```
## Loading required package: mvtnorm
```

```r
library("partykit")

if(!require(klaR)){install.packages("klaR")}
```

```
## Loading required package: klaR
```

```
## Warning: package 'klaR' was built under R version 4.2.2
```

```
## Loading required package: MASS
```

```r
  library("klaR")
```





## Append initials in the data frame we can use paste function to concatenate value and added _ as a separator.


```r
colnames(ExcelFile) <- paste(colnames(ExcelFile), "", sep = "")
head(ExcelFile)
```

```
##   Cancer Age    HW Hst Exe Smk Drk Hlth
## 1      0  43 1.127   1  53   0   0   VG
## 2      0  39 1.214   0  38   0   0    A
## 3      1  49 0.898   0  18   1   1    P
## 4      0  59 1.028   0   9   1   1    P
## 5      0  45 1.082   0 127   0   0   VG
## 6      0  53 1.057   1  11   0   0    A
```

# Convert Character variable into Factor.


```r
# convert all the char variables to factor.
as.data.frame(unclass(ExcelFile),stringsAsFactors = TRUE) 
```

```
##     Cancer Age    HW Hst Exe Smk Drk Hlth
## 1        0  43 1.127   1  53   0   0   VG
## 2        0  39 1.214   0  38   0   0    A
## 3        1  49 0.898   0  18   1   1    P
## 4        0  59 1.028   0   9   1   1    P
## 5        0  45 1.082   0 127   0   0   VG
## 6        0  53 1.057   1  11   0   0    A
## 7        1  69 0.908   1   8   1   1    P
## 8        0  50 1.099   0   7   0   0    A
## 9        0  40 1.209   0  51   0   0    A
## 10       0  50 1.027   0  11   0   0    P
## 11       0  52 1.264   0  14   0   1   VP
## 12       0  38 1.151   1  26   0   0   VG
## 13       1  56 0.798   1  69   1   1   VP
## 14       0  40 1.115   0  65   0   0    A
## 15       0  33 1.192   0  14   0   0    P
## 16       1  54 0.937   1  10   1   1    G
## 17       0  45 1.186   1  35   0   0   VG
## 18       0  52 1.135   0  23   0   0   VP
## 19       0  45 1.033   0  14   0   0    A
## 20       1  52 0.886   0  25   0   0    G
## 21       1  42 0.988   0  26   1   1    A
## 22       1  53 1.062   1  14   1   1   VG
## 23       1  47 0.946   0  36   1   1    A
## 24       0  31 0.954   0  40   0   0    A
## 25       0  40 1.302   0   9   0   0   VG
## 26       1  40 1.042   0  49   1   1    A
## 27       1  56 0.808   0  23   1   1    G
## 28       0  27 0.992   1  34   0   0    A
## 29       1  40 0.995   1  25   1   1    A
## 30       1  39 0.994   0  20   1   1    P
## 31       0  43 1.014   0  56   0   0    A
## 32       1  55 0.920   1  33   1   1   VG
## 33       1  54 0.927   1  30   1   1    A
## 34       1  54 0.905   0  13   1   1    P
## 35       1  51 1.015   0   6   1   1    A
## 36       1  52 0.786   1  31   1   0    A
## 37       1  54 0.928   0  22   0   0    A
## 38       0  27 1.121   1  48   0   0    G
## 39       0  45 1.165   0  37   0   0    P
## 40       1  58 0.964   0   9   0   0    A
## 41       0  41 1.042   0  10   0   0    G
## 42       0  39 1.178   0  22   1   1    P
## 43       1  55 0.957   0  24   1   1    A
## 44       0  44 1.106   0  38   0   0    P
## 45       0  22 1.134   0  18   0   0   VP
## 46       0  43 1.032   0   8   0   0    A
## 47       1  46 0.899   1   4   1   1   VG
## 48       0  48 1.185   0  33   0   0    A
## 49       1  40 0.772   0   9   1   1    P
## 50       1  54 0.949   1  22   1   1    P
## 51       0  38 1.159   0  11   0   0    P
## 52       0  52 1.255   0  24   0   0    A
## 53       1  41 1.084   1   9   1   1    P
## 54       1  49 1.031   0   6   0   0    P
## 55       1  47 0.919   0  39   1   1    A
## 56       0  43 1.039   0  15   0   0    G
## 57       1  55 0.966   0   9   1   1    P
## 58       1  39 0.975   0   5   1   1   VG
## 59       1  59 0.958   0  18   1   1    G
## 60       1  51 0.974   1  15   1   1    A
## 61       1  50 1.011   0  46   0   0   VG
## 62       1  48 0.919   0  73   1   1    A
## 63       0  43 1.063   0  31   0   0    G
## 64       0  48 0.998   0  10   1   1   VG
## 65       1  39 0.904   1  32   1   1    P
## 66       1  42 0.832   0  65   1   1   VP
## 67       0  29 1.069   0  18   0   0   VG
## 68       0  52 1.002   0  55   0   0    G
## 69       0  50 1.173   0  40   1   1   VG
## 70       1  44 1.049   0  50   1   1    P
## 71       1  48 0.873   1  25   0   0    G
## 72       0  51 1.085   0   5   0   0    G
## 73       0  62 1.147   0  16   0   0    P
## 74       1  57 0.899   0  28   1   1    P
## 75       1  39 0.866   1  56   1   1   VG
## 76       1  43 0.932   0  13   0   1   VG
## 77       0  44 1.057   0  37   1   1    P
## 78       0  53 1.044   0  21   0   0    P
## 79       0  31 1.063   0  43   1   1    A
## 80       0  52 1.205   0 113   0   0   VP
## 81       0  41 1.273   1  51   0   0    G
## 82       1  33 1.014   0  14   1   1   VG
## 83       0  50 1.182   1  36   0   0    A
## 84       0  46 1.069   0  26   1   1    G
## 85       1  43 0.985   1  58   0   0    P
## 86       0  49 1.127   1  45   0   0    P
## 87       0  45 1.088   0  53   0   0    G
## 88       0  41 1.167   0  13   0   0   VG
## 89       0  49 1.383   0  16   0   0    P
## 90       1  62 0.915   0  49   1   1    A
## 91       1  47 0.960   0  49   0   0    A
## 92       1  49 0.990   0  53   0   0   VG
## 93       0  41 1.184   1  11   0   0    A
## 94       1  47 0.981   1  67   1   1    P
## 95       0  58 1.112   1  10   0   0   VG
## 96       1  33 0.997   1  32   1   1    P
## 97       0  46 0.983   0  38   1   1    G
## 98       0  40 0.862   0  49   0   0    A
## 99       1  48 1.136   1  26   1   1    A
## 100      0  53 1.051   0  12   0   0    A
## 101      0  50 1.091   0  80   0   0    P
## 102      0  48 1.007   0  32   0   1   VG
## 103      0  55 1.156   0  56   0   0   VG
## 104      0  50 1.049   1  49   0   0   VG
## 105      0  26 1.045   0  34   0   0    A
## 106      1  60 0.984   0  41   0   0    G
## 107      0  51 1.339   1  34   0   1    A
## 108      0  37 1.051   0  19   0   0   VG
## 109      1  58 0.874   0  20   0   0    P
## 110      0  43 1.380   0  21   0   0    A
## 111      1  50 0.882   0  21   1   1    P
## 112      1  49 0.914   0  25   0   0   VG
## 113      1  51 0.807   0   9   1   1    A
## 114      1  48 0.890   1  12   1   1    A
## 115      0  54 1.034   1  65   0   0    P
## 116      0  45 1.210   0  39   0   0    G
## 117      1  47 1.166   1  18   1   1    G
## 118      0  36 1.069   1  33   0   0    A
## 119      1  53 0.972   0  17   1   1    A
## 120      1  52 0.920   0  36   1   1   VG
## 121      0  48 1.223   0  37   0   0   VG
## 122      0  44 1.101   0  20   0   0    P
## 123      1  52 0.967   0  65   1   1    A
## 124      0  56 0.956   0   9   0   1    G
## 125      0  49 1.011   0  36   0   0    P
## 126      1  43 0.969   1  22   1   1    A
## 127      0  51 1.259   0  23   0   0    G
## 128      0  39 1.036   0  21   0   0    G
## 129      0  51 1.137   0  46   0   0    G
## 130      1  43 0.841   1  18   0   0    P
## 131      1  36 1.040   1  41   0   0   VG
## 132      1  39 1.209   1  10   0   0   VG
## 133      1  50 0.881   0  25   1   1    G
## 134      1  38 0.949   1  34   1   1   VG
## 135      0  47 1.077   0  56   0   1    A
## 136      0  29 1.247   0  12   0   0   VG
## 137      1  57 0.856   1  38   0   0    G
## 138      1  52 0.946   1  78   1   1   VG
## 139      0  56 1.209   0  47   0   0    A
## 140      1  48 1.043   1  17   1   1    A
## 141      0  42 1.119   1   4   0   0    A
## 142      0  47 1.063   1  78   0   0    G
## 143      0  42 1.179   0  43   1   1    P
## 144      0  32 1.010   0  17   0   0    P
## 145      1  60 1.085   1   4   1   1    A
## 146      1  58 0.973   0  26   1   1   VP
## 147      1  48 0.929   0  87   1   1    G
## 148      1  58 1.031   1   6   1   1    A
## 149      0  44 1.049   1   6   1   1    A
## 150      1  56 1.023   1  27   0   0    A
## 151      0  51 1.273   0   5   0   0    P
## 152      1  55 0.831   0  12   0   0    A
## 153      1  67 1.002   1  22   1   1   VP
## 154      0  32 1.054   0  57   0   0    A
## 155      0  52 1.148   0  19   0   0    G
## 156      1  56 1.041   1  17   1   1   VP
## 157      0  47 0.924   0  46   0   0    A
## 158      1  39 0.764   0  59   1   1    P
## 159      0  49 1.146   0  20   0   0    G
## 160      0  32 0.944   0  59   0   0    A
## 161      1  40 0.856   0   8   1   1    P
## 162      0  44 1.131   0  81   0   0   VP
## 163      1  51 1.078   1  89   1   1    A
## 164      1  49 0.959   0   5   0   0    P
## 165      1  52 0.965   0  37   0   0   VG
## 166      1  53 0.855   0  16   1   1    P
## 167      0  33 1.163   0  71   0   1   VG
## 168      1  59 0.910   1  20   1   1    G
## 169      1  63 1.088   0  28   1   1    A
## 170      0  47 1.017   0  11   0   0   VP
## 171      0  44 1.041   0 126   0   0   VP
## 172      1  46 0.933   1   4   1   1    P
## 173      0  47 1.208   1  21   0   1    P
## 174      0  51 1.034   1  52   1   1   VG
## 175      1  45 1.084   0  38   0   0   VP
## 176      0  44 1.087   1   5   0   0    G
## 177      1  56 1.012   1  39   1   1    A
## 178      1  55 0.974   1  37   1   1    A
## 179      0  43 1.096   1  15   0   0   VG
## 180      0  45 1.167   0  28   1   1    G
## 181      0  61 0.945   0  27   0   0   VG
## 182      1  51 0.891   0  14   1   1    G
## 183      0  40 1.269   0   6   0   0   VG
## 184      0  46 1.033   0  41   0   0    A
## 185      0  52 0.948   0  36   0   1    G
## 186      0  43 1.112   0  64   0   0    A
## 187      0  38 1.274   0   2   1   1   VG
## 188      1  48 1.088   1   9   1   1    A
## 189      0  46 0.974   1  22   0   0   VG
## 190      1  49 0.929   0  23   1   1   VG
## 191      0  50 1.021   0 101   1   1   VG
## 192      0  40 1.156   0  29   1   1    P
## 193      0  32 1.250   0   7   1   1    G
## 194      1  54 0.793   1  38   1   1    A
## 195      0  39 0.986   0  24   0   1    P
## 196      1  56 1.128   0  55   1   1    P
## 197      1  55 1.067   0 101   1   1    G
## 198      1  42 1.008   1  35   1   1   VG
## 199      0  38 1.184   0  18   0   0    P
## 200      0  45 0.907   0  23   1   1    P
## 201      0  40 1.133   0 129   0   0   VP
## 202      1  56 0.777   0  21   0   0   VG
## 203      1  56 0.868   1  16   0   0    P
## 204      1  59 0.941   0  46   1   1    A
## 205      1  48 1.001   0  10   1   1   VG
## 206      1  39 0.956   1  47   1   1    G
## 207      1  53 0.844   0 124   1   1   VG
## 208      1  39 1.029   1  13   1   1    G
## 209      0  59 1.161   0   2   0   0   VG
## 210      0  59 1.117   0  46   1   1   VP
## 211      0  37 0.841   1  37   1   1    A
## 212      1  40 1.044   0   2   1   1    G
## 213      1  52 1.042   1   9   0   0    A
## 214      0  51 1.038   0  33   0   0   VG
## 215      0  29 1.118   0  65   0   0    G
## 216      0  33 1.111   0  52   0   0   VG
## 217      1  44 0.798   0  50   1   1   VP
## 218      0  48 1.252   0  22   0   0    A
## 219      0  25 1.152   0  18   0   0    G
## 220      0  47 0.996   0  25   0   0   VP
## 221      1  58 0.981   1  23   1   1    P
## 222      1  45 0.717   0  40   1   1    A
## 223      0  42 1.170   0  23   0   0    G
## 224      1  57 0.894   1  29   1   1    P
## 225      0  52 1.043   0  47   0   0    P
## 226      1  58 0.898   0  43   0   0    G
## 227      0  41 1.154   0  30   0   0   VG
## 228      0  47 1.053   0  14   0   0    A
## 229      0  59 1.260   0  15   0   1   VP
## 230      0  55 1.062   1  29   0   0    P
## 231      1  41 0.694   1  44   1   1   VG
## 232      0  37 1.037   0  33   1   1   VG
## 233      0  58 0.951   0  20   1   1    G
## 234      0  44 1.122   0  82   0   0    P
## 235      0  52 1.309   1  20   0   1    P
## 236      1  52 0.930   0  44   1   1   VG
## 237      1  39 0.953   1  28   1   1    P
## 238      1  62 0.918   0  29   1   1    P
## 239      1  41 0.896   1  38   0   0    P
## 240      0  56 1.058   1   3   0   0    G
## 241      0  39 1.091   0  54   0   0    A
## 242      0  52 1.108   0  58   1   1   VG
## 243      1  63 1.154   1  14   1   1    A
## 244      0  31 1.184   0 140   0   0    P
## 245      0  48 1.227   0  22   0   0    P
## 246      1  52 1.024   1  30   1   1    G
## 247      1  42 0.773   1  18   1   1    P
## 248      0  33 1.264   0   7   0   0    A
## 249      0  47 1.171   1  23   0   0    A
## 250      1  45 0.996   1  30   1   1   VP
## 251      1  47 0.944   0  42   1   1    A
## 252      0  53 1.163   0  33   0   1    G
## 253      1  33 0.763   0  33   1   1   VG
## 254      1  31 0.898   1  17   1   1    P
## 255      0  44 0.974   0  36   0   0    G
## 256      1  64 0.914   1   6   1   1    P
## 257      0  60 8.500   0  15   0   0    A
## 258      0  56 1.031   0  22   0   0    G
## 259      1  41 0.878   1 107   0   0    A
## 260      0  48 1.050   0   4   1   1    P
## 261      1  65 0.852   1  57   1   1   VG
## 262      0  46 0.973   1  19   0   0   VP
## 263      1  50 0.981   0  32   1   1   VG
## 264      1  53 0.967   0  73   1   1   VG
## 265      1  48 1.147   1  25   1   1    A
## 266      1  62 1.167   1  10   1   1    P
## 267      1  56 1.057   0  38   0   0    A
## 268      1  51 1.084   1  71   1   1    A
## 269      0  57 1.096   0  33   1   1    A
## 270      1  59 1.208   0  41   0   0    G
## 271      0  31 1.165   1  27   0   0    A
## 272      0  32 1.201   1  54   0   0    A
## 273      1  32 0.964   0  29   1   1    P
## 274      1  57 1.035   1  63   1   1    G
## 275      1  50 0.678   1  29   1   1    A
## 276      1  53 0.804   1  41   1   1   VP
## 277      1  55 0.869   0  46   1   1    P
## 278      0  41 1.155   0  21   0   0    A
## 279      1  42 0.961   0  59   0   0   VG
## 280      1  45 0.932   1  68   1   1    G
## 281      0  40 1.004   0  37   1   1    A
## 282      0  54 0.974   0  44   0   0    G
## 283      0  51 1.114   1  11   0   0    P
## 284      1  47 1.120   0   3   1   1   VG
## 285      1  51 1.014   0  30   1   1    G
## 286      1  45 0.992   1  12   1   1   VP
## 287      1  45 0.941   1  20   1   1   VG
## 288      0  46 1.233   0  27   0   1    P
## 289      1  48 0.944   0  15   1   1    A
## 290      1  58 0.873   0  60   1   1    G
## 291      1  47 0.996   0  15   1   1    A
## 292      0  38 0.893   0  73   0   0    A
## 293      0  53 1.210   0  43   0   0    G
## 294      1  38 0.856   1  24   1   1    A
## 295      0  33 1.093   1  78   1   1    A
## 296      1  38 0.923   1  38   1   1   VG
## 297      1  53 0.989   1  48   1   1    G
## 298      0  45 1.195   0   6   0   0   VG
## 299      0  51 1.207   0  30   0   0    G
## 300      0  38 1.061   0   7   0   0    A
## 301      1  45 0.871   1  15   1   1    P
## 302      0  49 1.170   0  15   1   1    G
## 303      0  42 1.228   0  11   0   0    P
## 304      1  40 0.973   0   5   0   0    P
## 305      0  48 1.207   0  32   0   0    A
## 306      0  36 1.141   1   1   0   0    G
## 307      0  45 1.085   1   3   1   0    G
## 308      1  45 0.792   0  16   1   1    G
## 309      1  53 1.055   1  34   1   1   VG
## 310      1  55 1.038   1  10   1   1    P
## 311      1  54 0.944   1  29   1   1    A
## 312      1  46 0.808   0  65   1   1    G
## 313      0  51 1.004   0   2   0   0    A
## 314      1  29 0.949   0   9   1   1    A
## 315      1  58 1.060   1  36   1   1    P
## 316      0  40 0.987   1  20   0   0    G
## 317      0  35 1.268   0  44   0   0   VP
## 318      1  54 1.016   1  29   1   1    P
## 319      0  60 1.038   0  34   1   1    G
## 320      1  46 0.841   1  30   1   1   VG
## 321      0  52 0.879   0  24   0   0    A
## 322      0  35 1.263   1  99   0   0    G
## 323      1  46 1.063   1  18   1   1   VP
## 324      0  53 1.073   0  35   0   0    A
## 325      1  53 0.965   0  26   0   0    G
## 326      1  57 0.978   1  30   1   1   VP
## 327      1  53 0.983   1  15   1   1    A
## 328      1  64 0.791   0  23   0   0    G
## 329      0  41 1.126   0  44   1   1    G
## 330      1  50 0.955   0  19   1   1    A
## 331      0  42 1.174   0  61   0   0   VP
## 332      1  48 0.826   1  26   1   1    P
## 333      1  62 0.935   0  54   1   1    A
## 334      0  34 1.050   0  24   0   0   VP
## 335      1  61 0.707   0  42   1   1   VG
## 336      0  45 1.064   0  29   0   0    A
## 337      0  54 1.080   1  47   0   1    G
## 338      0  43 1.035   0  28   1   1    G
## 339      0  41 1.098   0  34   1   1    A
## 340      0  36 1.065   0  52   0   0    G
## 341      0  38 0.995   0  24   0   0   VG
## 342      1  44 0.959   1  66   1   1    G
## 343      1  55 1.071   1  37   1   1    G
## 344      1  37 1.019   0   6   1   1    P
## 345      1  35 0.753   0  33   1   1   VG
## 346      1  51 1.045   0  26   1   1    G
## 347      1  53 1.073   0  29   1   1    P
## 348      0  46 1.000   1  26   0   0    A
## 349      0  37 0.915   0  34   1   1    A
## 350      0  34 1.138   0  14   0   0    P
## 351      1  45 0.922   1  59   1   1    G
## 352      1  38 0.980   0   7   1   1    G
## 353      0  39 0.949   0  55   0   0    A
## 354      0  42 1.119   0  53   0   0    G
## 355      0  30 0.962   0  54   0   0   VG
## 356      1  36 0.940   1  28   1   1    P
## 357      1  57 0.895   0  80   1   1    P
## 358      1  46 1.069   1  21   0   0    A
## 359      1  48 0.891   1  21   1   1   VP
## 360      0  48 1.069   0  22   0   0    G
## 361      1  41 0.845   0  68   0   0    G
## 362      1  58 0.787   0  88   1   1    G
## 363      0  40 1.001   1  23   0   0   VG
## 364      1  59 1.105   1  10   0   0   VP
## 365      1  50 0.829   1  36   1   1    G
## 366      0  44 1.131   0  65   0   0    P
## 367      0  46 1.139   0   3   0   0    A
## 368      1  38 0.996   0  11   1   1   VP
## 369      0  40 0.998   0  22   0   1   VP
## 370      1  45 0.930   0  22   1   1    G
## 371      1  48 1.013   1  17   1   1    G
## 372      0  46 0.944   0  20   0   0   VP
## 373      0  52 1.133   0  17   0   0    P
## 374      0  36 1.181   0  16   1   1   VG
## 375      1  31 0.951   0  80   1   1    G
## 376      1  49 1.095   1   3   1   1    G
## 377      0  54 1.053   0 107   0   0    P
## 378      1  52 1.027   0  11   1   1    P
## 379      1  44 1.017   0  31   1   1    A
## 380      0  32 1.265   0  32   1   1    P
## 381      0  45 1.035   1  39   0   0    P
## 382      0  37 1.007   0  50   0   0    A
## 383      0  49 1.039   0   7   0   1    A
## 384      1  37 1.125   0  31   1   1   VP
## 385      1  55 0.964   1  52   1   1    G
## 386      1  52 0.860   0  30   1   1    A
## 387      1  40 1.120   1  58   1   1    P
## 388      0  45 0.883   0  27   0   0    P
## 389      0  48 1.218   0  24   0   1   VP
## 390      0  37 1.273   0  22   0   0   VG
## 391      0  38 1.106   0   9   0   0    A
## 392      0  48 1.050   0  11   0   0    G
## 393      0  60 1.040   0  29   0   0    G
## 394      1  45 0.854   0  16   0   0    G
## 395      0  42 0.977   0  17   0   0    G
## 396      0  37 1.044   0  22   1   1    A
## 397      1  40 1.014   1  40   1   0    G
## 398      1  49 1.060   1  48   0   0    G
## 399      0  49 0.978   0  66   0   0    P
## 400      1  53 1.131   1   9   0   0    G
## 401      0  39 1.134   1  26   0   1   VG
## 402      1  48 0.850   0  25   1   1    A
## 403      1  54 0.841   0  21   1   1   VG
## 404      0  53 1.039   0   7   1   1    G
## 405      1  41 0.867   0   7   1   1   VP
## 406      1  59 0.938   1  36   0   0    P
## 407      1  32 0.895   1  21   1   1    P
## 408      1  44 1.062   1  18   1   1    P
## 409      1  52 1.047   1  25   1   1   VG
## 410      0  47 0.972   0  19   1   1    P
## 411      1  42 1.085   1  51   1   1    G
## 412      0  52 1.072   0  34   0   0    P
## 413      0  48 0.919   1  85   0   0    A
## 414      1  46 0.986   1  40   1   1    A
## 415      0  49 1.232   0  18   0   0    A
## 416      1  55 0.956   0  15   1   1    A
## 417      0  38 1.131   0  40   1   1    G
## 418      0  44 1.200   1  43   0   0    G
## 419      1  49 1.043   1  33   1   1    G
## 420      0  44 1.026   0  26   0   0    P
## 421      0  28 1.135   0  18   0   0    G
## 422      0  44 1.147   0  22   0   0    A
## 423      0  53 1.157   0  59   0   0    G
## 424      0  48 1.186   0  33   0   0    G
## 425      1  62 1.016   1  65   1   1    G
## 426      1  39 0.856   0  18   0   0    A
## 427      1  60 0.768   1  76   0   1    P
## 428      0  50 1.005   0   8   1   1    G
## 429      0  44 1.094   0  11   0   0   VG
## 430      1  53 1.041   1  27   1   1    A
## 431      1  51 0.987   1  31   1   1    P
## 432      1  60 1.073   0  45   1   1    G
## 433      0  53 0.989   0  15   0   1   VP
## 434      1  55 1.001   1  23   1   1    A
## 435      0  32 1.213   0  26   0   0   VP
## 436      1  56 1.045   1  71   1   1    A
## 437      0  51 1.062   0  53   0   0    A
## 438      1  53 1.030   0  21   1   1    G
## 439      0  49 1.002   0  23   0   0    G
## 440      0  48 1.082   0  37   0   0    A
## 441      0  45 1.042   0  17   0   0   VP
## 442      1  45 1.037   1  16   1   1    P
## 443      0  56 1.037   0  25   1   1    G
## 444      1  47 0.970   1  15   1   1    P
## 445      0  38 1.110   1  16   0   0   VG
## 446      1  45 0.745   0  23   1   1    G
## 447      0  45 1.113   0  26   0   0    A
## 448      1  50 0.912   1  37   1   1    A
## 449      1  49 1.057   0  56   1   1    A
## 450      1  46 0.957   0  16   1   1   VP
## 451      0  49 1.240   0  10   0   0    A
## 452      1  40 1.171   0  58   1   1    G
## 453      0  38 1.009   0  10   1   1   VP
## 454      1  45 0.799   1  73   1   1    P
## 455      0  26 1.230   1  23   1   1   VG
## 456      1  43 0.889   1  32   1   1    P
## 457      1  52 0.894   0  14   1   1    G
## 458      0  36 1.259   1  19   1   1    A
## 459      0  45 1.242   0  17   0   0    P
## 460      0  45 0.894   1  22   0   0    G
## 461      0  51 1.122   0  30   0   0    A
## 462      1  52 0.994   1  12   1   1    A
## 463      0  48 0.980   0   8   0   0    A
## 464      0  37 1.154   0  17   0   0    P
## 465      1  45 0.851   0  18   1   1    P
## 466      0  43 1.074   0  37   1   1    G
## 467      1  50 0.831   1  52   1   1    G
## 468      1  46 0.948   1  23   1   1    A
## 469      0  51 1.217   0  32   0   0    P
## 470      1  55 0.983   0   4   1   1    G
## 471      1  53 1.107   1  30   1   1    G
## 472      1  53 0.944   1  18   1   1    G
## 473      1  43 1.019   0  16   1   1   VP
## 474      0  47 1.122   0  60   0   0    A
## 475      0  50 1.253   0  31   0   0    A
## 476      0  40 0.959   0  51   0   0   VG
## 477      0  28 1.148   1  19   0   0    A
## 478      0  41 1.147   1  22   0   0   VG
## 479      1  56 0.925   1  52   1   1    P
## 480      0  41 0.888   0  35   0   0   VP
## 481      1  37 1.149   1   2   0   0    P
## 482      1  55 1.055   1  24   0   0    A
## 483      0  40 1.214   0  18   0   0    G
## 484      0  52 1.082   0  27   0   0    P
## 485      0  46 1.043   0 101   0   0    A
## 486      1  45 0.977   0  21   1   1    G
## 487      1  54 0.950   1  26   1   1   VP
## 488      0  43 1.141   0  33   1   1    A
## 489      1  48 1.193   0  13   0   0    A
## 490      0  23 1.200   0  26   1   1    G
## 491      0  47 1.105   0  79   0   0   VP
## 492      1  50 1.046   1  15   1   1    P
## 493      0  53 0.991   0  51   1   1    P
## 494      1  46 1.086   1  13   1   1    A
## 495      1  50 0.822   0  18   1   1    A
## 496      1  58 1.118   1  54   1   1    A
## 497      1  43 1.092   1  36   1   1    P
## 498      1  50 0.952   0  18   0   1    G
## 499      1  53 0.887   0  38   1   0   VG
## 500      0  45 1.173   0  31   0   0   VG
## 501      1  52 0.890   1   6   0   0    P
## 502      0  26 1.044   0  22   0   0    A
## 503      0  44 0.937   0  31   0   0    G
## 504      1  50 0.965   1  53   1   1   VG
## 505      1  49 0.992   0  60   1   1   VG
## 506      1  48 0.913   0  12   1   1    G
## 507      1  41 0.840   0  19   1   1    G
## 508      0  49 1.221   0  26   0   0   VG
## 509      0  50 1.015   0  44   0   0    A
## 510      1  61 0.870   1  71   1   1   VG
## 511      1  60 0.898   0   9   1   1    P
## 512      1  44 0.952   1  13   1   1   VG
## 513      1  44 1.142   1  22   0   0    P
## 514      1  68 1.118   0  44   1   1    A
## 515      1  51 0.928   1  17   1   1    A
## 516      0  53 1.253   1  29   0   0   VG
## 517      1  40 1.060   0  11   1   1    A
## 518      0  44 1.053   0   2   0   0    A
## 519      1  47 1.129   0  24   0   0   VP
## 520      0  34 1.054   0  11   0   0    G
## 521      1  42 0.843   1  24   1   1    A
## 522      0  52 1.102   0   4   1   1   VG
## 523      1  54 0.790   1  25   1   1    A
## 524      1  47 0.969   0  52   1   1    A
## 525      0  41 0.934   0   7   1   1    A
## 526      0  44 0.878   0   9   0   0    P
## 527      1  46 0.975   0   5   1   1    A
## 528      0  47 0.943   0  42   1   1   VP
## 529      0  52 1.252   0  47   1   1   VG
## 530      1  54 0.929   0  31   1   1   VP
## 531      0  37 1.034   0  10   0   0    A
## 532      1  60 0.883   0  13   0   0    G
## 533      1  46 0.957   0  14   1   1   VG
## 534      0  48 1.090   1  15   1   1   VP
## 535      1  42 0.944   0   7   1   1    G
## 536      1  30 0.777   1  30   1   1   VP
## 537      0  56 1.058   0  42   0   0    A
## 538      1  59 1.038   1   4   1   1   VG
## 539      1  51 0.966   0  43   1   1   VG
## 540      1  40 0.946   0  14   1   1    P
## 541      0  55 1.036   1  12   1   1    A
## 542      0  44 1.023   0  19   0   0    A
## 543      0  50 0.923   0  32   0   0    P
## 544      1  52 0.934   1  47   0   0    G
## 545      1  45 0.977   0  75   1   1    P
## 546      0  52 0.974   0  18   0   1   VG
## 547      1  46 0.739   0  16   1   1    P
## 548      0  45 1.248   1  31   0   0    A
## 549      1  55 0.725   1  37   1   1    A
## 550      0  54 1.224   0  21   1   1    P
## 551      0  50 1.050   0  32   0   0    P
## 552      1  52 0.969   1   8   1   1    A
## 553      0  49 1.257   0  22   1   1    P
## 554      1  52 0.938   1   7   1   1    A
## 555      1  48 0.956   1  48   1   1   VP
## 556      0  41 1.198   0  10   0   1    A
## 557      1  47 0.911   0  27   0   0    G
## 558      0  63 1.301   0  15   0   0    A
## 559      1  33 1.117   1  34   0   0    A
## 560      1  46 0.922   1  11   1   1    P
## 561      0  47 1.101   0  40   0   0    P
## 562      0  46 1.201   0  27   1   1    A
## 563      0  42 1.005   0  28   1   1   VG
## 564      1  48 1.055   0  11   1   1    P
## 565      0  37 1.062   0  27   0   0   VG
## 566      0  49 1.154   0  28   0   0    A
## 567      0  30 1.086   0  11   0   0    A
## 568      0  40 1.215   0  50   0   0    G
## 569      1  44 0.974   0  40   0   0   VP
## 570      1  54 1.111   1  24   1   1    P
## 571      0  44 1.147   1  17   0   0   VG
## 572      0  38 1.042   0  10   0   0   VG
## 573      0  56 1.223   0  11   0   0    P
## 574      1  46 0.880   1  42   1   1    A
## 575      1  61 0.861   1  35   1   1   VG
## 576      1  42 0.929   0  12   1   1    A
## 577      0  45 1.064   0  35   1   1    A
## 578      0  40 1.121   0   4   0   0    A
## 579      0  46 1.185   0  23   0   0    P
## 580      0  53 1.057   0  47   0   0    A
## 581      1  67 0.957   1  17   0   0    P
## 582      0  45 1.220   0  56   0   0    P
## 583      1  48 1.042   0  16   0   0   VP
## 584      1  41 1.049   0  24   0   0    G
## 585      0  52 1.039   0  51   0   0   VG
## 586      1  36 0.851   1   8   1   0    G
## 587      0  44 1.014   0  30   1   1   VG
## 588      1  61 1.185   1  20   1   1    P
## 589      1  58 0.835   1  12   1   1    P
## 590      0  43 1.232   1  29   0   0    G
## 591      0  53 1.069   0   8   0   0    G
## 592      1  54 0.820   1  44   1   1   VP
## 593      1  44 1.066   0  91   1   1    P
## 594      1  52 0.967   1  58   1   1    P
## 595      1  41 0.941   1  85   1   1    A
## 596      0  39 1.134   0  22   1   1    A
## 597      0  58 1.253   0  58   1   1   VP
## 598      1  48 0.996   1  16   0   0   VP
## 599      0  43 1.117   0  54   0   1    A
## 600      0  46 1.142   0  53   0   0    G
## 601      0  51 1.067   0  93   1   1   VG
## 602      1  59 0.887   0  16   1   1   VG
## 603      0  46 1.162   0  48   1   1    A
## 604      1  57 0.992   0  15   1   1   VG
## 605      0  49 1.005   0  20   0   1    G
## 606      1  53 0.904   1  14   1   1    G
## 607      1  50 0.857   1  43   1   1    G
## 608      0  55 1.076   1 107   0   0   VG
## 609      1  48 0.953   1  58   1   1    A
## 610      1  52 0.919   1  49   0   0    A
## 611      1  37 0.923   1  34   1   1   VG
## 612      0  52 1.216   0  32   0   0    P
## 613      0  57 0.968   0  55   0   0    A
## 614      1  55 0.926   0  15   1   1    G
## 615      1  51 1.003   1  71   1   1    A
## 616      1  39 0.950   0  18   0   0    A
## 617      1  50 1.176   0  15   1   1    A
## 618      1  59 1.065   1   4   0   0   VG
## 619      0  42 1.125   0  25   0   1    A
## 620      1  52 0.996   0  22   1   1    G
## 621      0  43 1.127   0  29   1   1    P
## 622      0  55 1.082   0  25   0   0    A
## 623      0  49 1.322   1  15   0   0    G
## 624      0  52 1.018   1  75   1   1    A
## 625      1  38 0.980   1  90   1   1    A
## 626      0  42 1.019   0   3   0   0    A
## 627      0  46 0.978   0  51   0   0    G
## 628      1  50 1.004   1  23   1   1   VG
## 629      0  30 1.035   0  29   0   0    P
## 630      0  39 1.008   1  50   0   0    A
## 631      0  38 0.971   0   9   0   0    P
## 632      0  47 1.093   0  50   0   0    A
## 633      1  33 1.016   1  36   1   1    G
## 634      1  49 1.012   0  57   1   1    G
## 635      1  44 0.820   1   4   1   1   VP
## 636      1  43 0.971   1  36   0   0    A
## 637      1  47 1.235   1  71   0   0    A
## 638      1  41 0.977   0  20   1   1   VG
## 639      1  58 0.973   0  34   1   1    A
## 640      1  58 0.968   1   9   1   1    G
## 641      0  40 0.977   0  78   0   0    P
## 642      1  50 1.015   1  13   1   1    G
## 643      1  48 1.036   0  44   1   1    P
## 644      0  54 1.074   0  18   0   0    P
## 645      1  39 0.961   1  18   0   0   VP
## 646      0  49 1.028   0   3   1   1    A
## 647      0  53 0.947   0  18   0   0    G
## 648      1  60 0.948   0  13   1   1    G
## 649      0  51 1.115   1  48   0   0    P
## 650      1  70 0.832   1  34   1   1    G
## 651      1  44 0.947   1  42   1   1    G
## 652      0  48 1.196   0  41   0   1    P
## 653      1  50 0.888   0  76   1   1    G
## 654      0  55 1.200   0  23   0   0    G
## 655      0  51 1.095   0  45   0   0    G
## 656      0  42 1.137   0  31   0   0   VG
## 657      1  50 1.097   0  34   1   1    G
## 658      1  47 1.010   0  91   1   1    A
## 659      0  46 1.151   0  17   0   0    P
## 660      0  50 1.224   0  41   0   0   VG
## 661      1  42 0.917   1   3   0   0    G
## 662      1  52 0.920   1  12   0   0    P
## 663      0  55 1.084   0  33   1   1    G
## 664      1  37 1.026   1  21   1   1   VG
## 665      0  35 1.195   1   8   0   0    A
## 666      1  48 0.917   0  20   1   1    G
## 667      0  56 1.031   0  60   1   1    G
## 668      0  38 1.081   1   8   0   0   VG
## 669      1  59 1.109   0  72   1   1    G
## 670      0  58 1.070   0  36   1   1    G
## 671      0  51 1.068   0  48   0   1    A
## 672      0  61 0.967   1  39   0   0    G
## 673      1  63 0.974   0  12   1   1   VG
## 674      0  52 1.216   0  11   0   0    G
## 675      0  52 1.133   0  30   0   0    A
## 676      0  39 1.092   0  17   1   1    P
## 677      1  51 1.066   0  10   1   1    A
## 678      0  37 1.095   0   6   0   0    A
## 679      1  33 0.987   0   6   0   0    A
## 680      1  46 1.129   1  38   1   1    G
## 681      1  43 1.033   1  21   1   1    A
## 682      1  34 1.066   0  40   1   1   VG
## 683      1  57 0.954   1  14   0   0    P
## 684      0  58 1.077   0  36   1   1    A
## 685      1  47 0.948   1  49   1   0    A
## 686      1  43 1.063   1   4   1   0    A
## 687      1  62 0.865   0  40   1   1    P
## 688      1  59 0.917   0  16   1   1   VP
## 689      1  39 1.027   1   4   1   1    P
## 690      1  47 1.067   0  30   1   1    P
## 691      0  50 1.058   0   5   0   0    A
## 692      1  48 0.819   0  22   0   0    G
## 693      0  51 1.061   0  17   0   0    A
## 694      0  47 1.071   1  17   0   0    A
## 695      0  39 1.203   0  15   0   1    A
```


# Checking Correlation


```r
# Checking Correlation

ExcelFile$Cancer <- as.numeric(ExcelFile$Cancer)
ExcelFile$Hst <- as.numeric(ExcelFile$Hst)
ExcelFile$Smk <- as.numeric(ExcelFile$Smk)
ExcelFile$Drk <- as.numeric(ExcelFile$Drk)
ExcelFile1 <- ExcelFile[c(1:7)]
cor(ExcelFile1[,unlist(lapply(ExcelFile1,is.numeric))], method="spearman")
```

```
##             Cancer         Age          HW           Hst           Exe
## Cancer  1.00000000  0.24144147 -0.58841442  0.3469225476 -0.0256017207
## Age     0.24144147  1.00000000 -0.15722835  0.0637420924  0.0321905781
## HW     -0.58841442 -0.15722835  1.00000000 -0.1425845373 -0.0410886539
## Hst     0.34692255  0.06374209 -0.14258454  1.0000000000 -0.0003593495
## Exe    -0.02560172  0.03219058 -0.04108865 -0.0003593495  1.0000000000
## Smk     0.59131155  0.15294993 -0.38752376  0.2044849284  0.0144553973
## Drk     0.50882751  0.16800966 -0.33218132  0.1556839972  0.0146751770
##               Smk         Drk
## Cancer  0.5913116  0.50882751
## Age     0.1529499  0.16800966
## HW     -0.3875238 -0.33218132
## Hst     0.2044849  0.15568400
## Exe     0.0144554  0.01467518
## Smk     1.0000000  0.89535521
## Drk     0.8953552  1.00000000
```

```r
# Based on the correlation, we can say that there is strong correlation between Smoke and Drink in the model.

ExcelFile1 <- ExcelFile1[-c(7)]
ExcelFile <- ExcelFile[-c(7)]
summary(ExcelFile)
```

```
##      Cancer           Age              HW             Hst        
##  Min.   :0.000   Min.   :22.00   Min.   :0.678   Min.   :0.0000  
##  1st Qu.:0.000   1st Qu.:42.00   1st Qu.:0.948   1st Qu.:0.0000  
##  Median :1.000   Median :48.00   Median :1.031   Median :0.0000  
##  Mean   :0.505   Mean   :47.09   Mean   :1.040   Mean   :0.3568  
##  3rd Qu.:1.000   3rd Qu.:52.00   3rd Qu.:1.115   3rd Qu.:1.0000  
##  Max.   :1.000   Max.   :70.00   Max.   :8.500   Max.   :1.0000  
##       Exe              Smk             Hlth          
##  Min.   :  1.00   Min.   :0.0000   Length:695        
##  1st Qu.: 15.00   1st Qu.:0.0000   Class :character  
##  Median : 26.00   Median :1.0000   Mode  :character  
##  Mean   : 31.45   Mean   :0.5079                     
##  3rd Qu.: 42.00   3rd Qu.:1.0000                     
##  Max.   :140.00   Max.   :1.0000
```

```r
head(ExcelFile1)
```

```
##   Cancer Age    HW Hst Exe Smk
## 1      0  43 1.127   1  53   0
## 2      0  39 1.214   0  38   0
## 3      1  49 0.898   0  18   1
## 4      0  59 1.028   0   9   1
## 5      0  45 1.082   0 127   0
## 6      0  53 1.057   1  11   0
```
# Check Dimensionality reduction


```r
# Using summary function, we can summarize all data in the data source.
## Based on summary, we can say that no null data is available.
summary(ExcelFile)
```

```
##      Cancer           Age              HW             Hst        
##  Min.   :0.000   Min.   :22.00   Min.   :0.678   Min.   :0.0000  
##  1st Qu.:0.000   1st Qu.:42.00   1st Qu.:0.948   1st Qu.:0.0000  
##  Median :1.000   Median :48.00   Median :1.031   Median :0.0000  
##  Mean   :0.505   Mean   :47.09   Mean   :1.040   Mean   :0.3568  
##  3rd Qu.:1.000   3rd Qu.:52.00   3rd Qu.:1.115   3rd Qu.:1.0000  
##  Max.   :1.000   Max.   :70.00   Max.   :8.500   Max.   :1.0000  
##       Exe              Smk             Hlth          
##  Min.   :  1.00   Min.   :0.0000   Length:695        
##  1st Qu.: 15.00   1st Qu.:0.0000   Class :character  
##  Median : 26.00   Median :1.0000   Mode  :character  
##  Mean   : 31.45   Mean   :0.5079                     
##  3rd Qu.: 42.00   3rd Qu.:1.0000                     
##  Max.   :140.00   Max.   :1.0000
```

```r
# Checking coef.var values for numeric field.
stat.desc(ExcelFile)
```

```
##                    Cancer           Age           HW          Hst           Exe
## nbr.val      695.00000000   695.0000000 695.00000000 695.00000000   695.0000000
## nbr.null     344.00000000     0.0000000   0.00000000 447.00000000     0.0000000
## nbr.na         0.00000000     0.0000000   0.00000000   0.00000000     0.0000000
## min            0.00000000    22.0000000   0.67800000   0.00000000     1.0000000
## max            1.00000000    70.0000000   8.50000000   1.00000000   140.0000000
## range          1.00000000    48.0000000   7.82200000   1.00000000   139.0000000
## sum          351.00000000 32731.0000000 722.46700000 248.00000000 21858.0000000
## median         1.00000000    48.0000000   1.03100000   0.00000000    26.0000000
## mean           0.50503597    47.0949640   1.03952086   0.35683453    31.4503597
## SE.mean        0.01897878     0.3030735   0.01169660   0.01818507     0.8477562
## CI.mean.0.95   0.03726271     0.5950510   0.02296496   0.03570436     1.6644745
## var            0.25033483    63.8382311   0.09508318   0.22983435   499.4899674
## std.dev        0.50033472     7.9898830   0.30835561   0.47941041    22.3492722
## coef.var       0.99069126     0.1696547   0.29663244   1.34350903     0.7106206
##                       Smk Hlth
## nbr.val      695.00000000   NA
## nbr.null     342.00000000   NA
## nbr.na         0.00000000   NA
## min            0.00000000   NA
## max            1.00000000   NA
## range          1.00000000   NA
## sum          353.00000000   NA
## median         1.00000000   NA
## mean           0.50791367   NA
## SE.mean        0.01897736   NA
## CI.mean.0.95   0.03725993   NA
## var            0.25029751   NA
## std.dev        0.50029743   NA
## coef.var       0.98500485   NA
```


# Check Outliners


```r
Cancer <- table(ExcelFile$Cancer)
Cancer <- Cancer[order(Cancer,decreasing=TRUE)]
barplot(Cancer,density = 30, angle = 45, main="The patient was diagnosed with cancer (0=no, 1=yes)", xlab="The patient was diagnosed with cancer", ylab = "Frequency", col=c("#6bc9c2"))
```

<img src="index_files/figure-html/unnamed-chunk-7-1.png" width="672" />

```r
# Created boxplot for Age (i.e. numeric, non-binary) to determine outliers.
boxplot(ExcelFile$Age, horizontal=TRUE, col=c("#6bc9c2"), pch=20, main = "Age in years")
```

<img src="index_files/figure-html/unnamed-chunk-7-2.png" width="672" />

```r
densityplot( ~ ExcelFile$Age, pch=6,col=c("#6bc9c2"), xlab = "Age")
```

<img src="index_files/figure-html/unnamed-chunk-7-3.png" width="672" />

```r
# Created boxplot for Height to Weight (i.e. numeric, non-binary) to determine outliers.
boxplot(ExcelFile$HW, horizontal=TRUE, col=c("#6bc9c2"), pch=20, main = "A ratio of Height to Weight")
```

<img src="index_files/figure-html/unnamed-chunk-7-4.png" width="672" />

```r
densityplot( ~ ExcelFile$HW, pch=6,col=c("#6bc9c2"), xlab = "Height to Weight")
```

<img src="index_files/figure-html/unnamed-chunk-7-5.png" width="672" />

```r
#Code to delete outliner data where Height to Weight value is more than 2.
nr <- which(ExcelFile$HW > 2)
ExcelFile <- ExcelFile[-c(nr),]
boxplot(ExcelFile$HW, horizontal=TRUE, col=c("#e8bbfa"), pch=20, main = "A ratio of Height to Weight")
```

<img src="index_files/figure-html/unnamed-chunk-7-6.png" width="672" />

```r
densityplot( ~ ExcelFile$HW, pch=6,col=c("#e8bbfa"), xlab = "Height to Weight")
```

<img src="index_files/figure-html/unnamed-chunk-7-7.png" width="672" />

```r
Hst <- table(ExcelFile$Hst)
Hst <- Hst[order(Hst,decreasing=TRUE)]
barplot(Hst,density = 30, angle = 45, main="History of Cancer in Family (0=No, 1=Yes)", xlab="History of Cancer", ylab = "Frequency", col=c("#6bc9c2"))
```

<img src="index_files/figure-html/unnamed-chunk-7-8.png" width="672" />

```r
# Created boxplot for Exercise (i.e. numeric, non-binary) to determine outliers.
boxplot(ExcelFile$Exe, horizontal=TRUE, col=c("#6bc9c2"), pch=20, main = "Time spent exercising each week (in minutes) - Box Plot")
```

<img src="index_files/figure-html/unnamed-chunk-7-9.png" width="672" />

```r
densityplot( ~ ExcelFile$Exe, pch=6,col=c("#6bc9c2"), xlab = "Exercise")
```

<img src="index_files/figure-html/unnamed-chunk-7-10.png" width="672" />

```r
Smk <- table(ExcelFile$Smk)
Smk <- Smk[order(Smk,decreasing=TRUE)]
barplot(Smk,density = 30, angle = 45, main="Patient is smoker (0=No, 1=Yes) - Bar Plot", xlab="Smoker", ylab = "Frequency", col=c("#6bc9c2"))
```

<img src="index_files/figure-html/unnamed-chunk-7-11.png" width="672" />

```r
Hlth <- table(ExcelFile$Hlth)
Hlth <- Hlth[order(Hlth,decreasing=TRUE)]
barplot(Hlth,density = 30, angle = 45, main="General health of patient. Five point scale: (VP) very poor health, (P) poor 
health, (A) average health, (G) good, (VG) very good health - Bar Plot", xlab="Health", ylab = "Frequency", col=c("#6bc9c2"))
```

<img src="index_files/figure-html/unnamed-chunk-7-12.png" width="672" />

# Creating Full Model


```r
#Creating a full model for all the variable with the Cancer variable as a dependent variable.
full.model = glm(Cancer ~ . ,data=ExcelFile, na.action=na.omit, family="binomial")
summary(full.model)
```

```
## 
## Call:
## glm(formula = Cancer ~ ., family = "binomial", data = ExcelFile, 
##     na.action = na.omit)
## 
## Deviance Residuals: 
##     Min       1Q   Median       3Q      Max  
## -2.9683  -0.4631   0.0611   0.4394   2.8500  
## 
## Coefficients:
##               Estimate Std. Error z value        Pr(>|z|)    
## (Intercept)  10.164755   1.637304   6.208 0.0000000005359 ***
## Age           0.055293   0.016001   3.456        0.000549 ***
## HW          -14.060269   1.426834  -9.854         < 2e-16 ***
## Hst           1.806521   0.266683   6.774 0.0000000000125 ***
## Exe          -0.006828   0.005392  -1.266        0.205366    
## Smk           2.453180   0.243388  10.079         < 2e-16 ***
## HlthG        -0.012830   0.320314  -0.040        0.968051    
## HlthP         0.189707   0.341117   0.556        0.578118    
## HlthVG       -0.001776   0.361760  -0.005        0.996082    
## HlthVP        0.386264   0.493251   0.783        0.433569    
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 962.00  on 693  degrees of freedom
## Residual deviance: 460.39  on 684  degrees of freedom
## AIC: 480.39
## 
## Number of Fisher Scoring iterations: 6
```

```r
pred <- predict(full.model, newdata=ExcelFile)
```

# Creating Backward Model


```r
# Creating another model using backward selection.
back.model = step(full.model, direction="backward", details=TRUE)
```

```
## Start:  AIC=480.39
## Cancer ~ Age + HW + Hst + Exe + Smk + Hlth
## 
##        Df Deviance    AIC
## - Hlth  4   461.39 473.39
## - Exe   1   462.00 480.00
## <none>      460.39 480.39
## - Age   1   472.97 490.97
## - Hst   1   512.56 530.56
## - Smk   1   580.17 598.17
## - HW    1   614.96 632.96
## 
## Step:  AIC=473.39
## Cancer ~ Age + HW + Hst + Exe + Smk
## 
##        Df Deviance    AIC
## - Exe   1   463.20 473.20
## <none>      461.39 473.39
## - Age   1   474.16 484.16
## - Hst   1   513.91 523.91
## - Smk   1   581.16 591.16
## - HW    1   616.86 626.86
## 
## Step:  AIC=473.2
## Cancer ~ Age + HW + Hst + Smk
## 
##        Df Deviance    AIC
## <none>      463.20 473.20
## - Age   1   475.87 483.87
## - Hst   1   516.15 524.15
## - Smk   1   582.73 590.73
## - HW    1   618.03 626.03
```

```r
summary(back.model)
```

```
## 
## Call:
## glm(formula = Cancer ~ Age + HW + Hst + Smk, family = "binomial", 
##     data = ExcelFile, na.action = na.omit)
## 
## Deviance Residuals: 
##      Min        1Q    Median        3Q       Max  
## -3.00105  -0.47042   0.06143   0.45058   2.86729  
## 
## Coefficients:
##              Estimate Std. Error z value         Pr(>|z|)    
## (Intercept)  10.02415    1.61317   6.214 0.00000000051671 ***
## Age           0.05456    0.01573   3.469         0.000523 ***
## HW          -14.02958    1.42157  -9.869          < 2e-16 ***
## Hst           1.80988    0.26535   6.821 0.00000000000906 ***
## Smk           2.43806    0.24161  10.091          < 2e-16 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## (Dispersion parameter for binomial family taken to be 1)
## 
##     Null deviance: 962.0  on 693  degrees of freedom
## Residual deviance: 463.2  on 689  degrees of freedom
## AIC: 473.2
## 
## Number of Fisher Scoring iterations: 6
```

```r
pred <- predict(back.model, newdata=ExcelFile)
```
# *****************************************************************************************************************
## AIC
### Backward model has lowset AIC value.
## Deviance
### Backward model has higher deviance difference.
## Residual symmetry
### Residual symmetry value is near by zero for backward model.
## z-values - all Pr(>z) values less than 0.05 is consider as the better model.
### For Backward model, Pr(>z) value is less than 0.05 for one and another varibale Pr(>z) value is near by 0.05.

### Based on these observations, we can say that backward model is the better model than backward model. 

# *****************************************************************************************************************

# Logistic Regression – Backward


```r
ExcelFile$Cancer <- as.factor(ExcelFile$Cancer)
ExcelFile$Hst <- as.factor(ExcelFile$Hst)
ExcelFile$Smk <- as.factor(ExcelFile$Smk)

# In regression, the dependent variable is marked as Y and the independent variable is marked as X. 
# So, here adding the Cancer as dependent variable and other variables as the independent variables.

glm.mod <- glm(Cancer ~ .,family="binomial", data=ExcelFile, na.action=na.omit)
stp.glm <- step(glm.mod)
```

```
## Start:  AIC=480.39
## Cancer ~ Age + HW + Hst + Exe + Smk + Hlth
## 
##        Df Deviance    AIC
## - Hlth  4   461.39 473.39
## - Exe   1   462.00 480.00
## <none>      460.39 480.39
## - Age   1   472.97 490.97
## - Hst   1   512.56 530.56
## - Smk   1   580.17 598.17
## - HW    1   614.96 632.96
## 
## Step:  AIC=473.39
## Cancer ~ Age + HW + Hst + Exe + Smk
## 
##        Df Deviance    AIC
## - Exe   1   463.20 473.20
## <none>      461.39 473.39
## - Age   1   474.16 484.16
## - Hst   1   513.91 523.91
## - Smk   1   581.16 591.16
## - HW    1   616.86 626.86
## 
## Step:  AIC=473.2
## Cancer ~ Age + HW + Hst + Smk
## 
##        Df Deviance    AIC
## <none>      463.20 473.20
## - Age   1   475.87 483.87
## - Hst   1   516.15 524.15
## - Smk   1   582.73 590.73
## - HW    1   618.03 626.03
```

```r
# Classifies
resp <- predict(back.model, type="response")
head(resp,10)
```

```
##           1           2           3           4           5           6 
## 0.163677830 0.007541106 0.926709960 0.778853270 0.062941720 0.474168752 
##           7           8           9          10 
## 0.995023557 0.064995936 0.008534171 0.160286731
```

```r
# more than 50% chance then 1 else 0.
class <- ifelse(resp > 0.5,1,0)
head(class)
```

```
## 1 2 3 4 5 6 
## 0 0 1 1 0 0
```

#Confusion Matrix for Logistic Regression – Backward


```r
# creating the confusion matrix.
LR_CF <-table(ExcelFile$Cancer, class, dnn = list("Actual","Predicted"))
LR_CF
```

```
##       Predicted
## Actual   0   1
##      0 291  52
##      1  46 305
```

```r
LR_TP <-LR_CF[2,2]
LR_TN <-LR_CF[1,1]
LR_FP <-LR_CF[1,2]
LR_FN <-LR_CF[2,1]
```

# Naive-Bayes Classification


```r
# In regression, the dependent variable is marked as Y and the independent variable is marked as X. 
# So, here adding the OT as dependent variable and other variables as the independent variables.
Naive <- NaiveBayes(Cancer ~ .,family="binomial", data=ExcelFile, na.action=na.omit)
```

# Confusion Matrix for Naive-Bayes Classification


```r
# Classifies
pred_bay <- predict(Naive,ExcelFile)
 
# Creates Confusion Matrix
Naive_CF <- table(Actual=ExcelFile$Cancer, Predicted=pred_bay$class)
Naive_CF
```

```
##       Predicted
## Actual   0   1
##      0 291  52
##      1  47 304
```

```r
Naive_TP <-Naive_CF[2,2]
Naive_TN <-Naive_CF[1,1]
Naive_FP <-Naive_CF[1,2]
Naive_FN <-Naive_CF[2,1]
```

# Linear Discriminant Analysis


```r
LDA <- lda(Cancer ~ .,data = ExcelFile, na.action=na.omit)
```

# Confusion Matrix for Linear Discriminant Analysis


```r
#Classifies
pred_dis <- predict(LDA, data=ExcelFile)
#Confusion Matrix
LDA_CF <- table(Actual=ExcelFile$Cancer, Predicted=pred_dis$class)
LDA_CF
```

```
##       Predicted
## Actual   0   1
##      0 293  50
##      1  49 302
```

```r
#Defined
LDA_TP <-LDA_CF[2,2]
LDA_TN <-LDA_CF[1,1]
LDA_FP <-LDA_CF[1,2]
LDA_FN <-LDA_CF[2,1]
```

# Checking which classifier is most accurate.


```r
# Accuracy: The proportion of cases correctly classified: (TP+TN)/Total

# Accuracy for LR classifier.
LR_ACC <-(LR_TP+LR_TN)/sum(LR_CF)
cat("Logistic Regression: ")
```

```
## Logistic Regression:
```

```r
LR_ACC
```

```
## [1] 0.8587896
```

```r
#Accuracy for Naive classifier.
Naive_ACC <-(Naive_TP+Naive_TN)/sum(Naive_CF)
cat("Naive Bayes Classification: ")
```

```
## Naive Bayes Classification:
```

```r
Naive_ACC
```

```
## [1] 0.8573487
```

```r
#Accuracy for LDA Classifier.
LDA_ACC <-(LDA_TP+LDA_TN)/sum(LDA_CF)
cat("Linear Discriminant Analysis: ")
```

```
## Linear Discriminant Analysis:
```

```r
LDA_ACC
```

```
## [1] 0.8573487
```

```r
## Based on the accuracy values for all three defined classifiers, 
## Linear Discriminant Analysis classifier is the most accurate 
## because it's value is slightly higher than other two classifier's accuracy value.
```


# Checking which classifier minimizes false positives.


```r
# False Positive value for Logistic Regression Classifier 
cat("Logistic Regression: ")
```

```
## Logistic Regression:
```

```r
LR_FP
```

```
## [1] 52
```

```r
# False Positive value for Naive Bayes Classification
cat("Naive Bayes Classification: ")
```

```
## Naive Bayes Classification:
```

```r
Naive_FP
```

```
## [1] 52
```

```r
# False Positive value for Linear Discriminant Analysis Classifier
cat("Linear Discriminant Analysis: ")
```

```
## Linear Discriminant Analysis:
```

```r
LDA_FP
```

```
## [1] 50
```

```r
## Based on the FP values for all three classifiers, 
## Linear Discriminant Analysis Classifier has the lowest value for false positives.
```

# Add Prediction



